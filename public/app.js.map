{"version":3,"sources":["app/app.js","app/tags/auth.tag","app/tags/events.tag","app/tags/main.tag"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnDA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA","file":"public/app.js","sourcesContent":["\"use strict\";\n\nvar App = {\n\n  main: undefined,\n\n  init: function() {\n    this.main = this.mount('main')[0];\n    console.dir(this.main);\n    console.log('App initialized.');\n  },\n\n  // make the ajax call adding the Auth header\n  // returns the promisable jqXHR object\n  get: function(url) {\n    return $.ajax({\n      dataType: \"json\",\n      url: url,\n      crossDomain: true,\n      beforeSend: function(xhr) {\n        var token = $('#token').val();\n        xhr.setRequestHeader('Authorization', \"Basic \" + btoa(token + \":x-oauth-basic\"));\n      }\n    });\n  },\n\n  // make get request and return the response json data, or the error\n  request: function(url) {\n    var res = {};\n    // get\n    this.get(url)\n    .done(function(data){ res.data = data; })\n    .fail(function(jqXHR, textStatus){ res.error = textStatus; })\n    .always(function(){ console.dir(res) })\n    return res;\n  },\n\n  // calls riot.mount for the given tag\n  mount: function(tag){\n    // require & mount\n    require('tags/' + tag);\n    return riot.mount(tag, { app: this });\n  },\n\n  refresh: function(e,app){\n    app.main.update();\n  },\n\n};\n\nmodule.exports = App;\n","riot.tag('auth', '<input id=\"username\" type=\"text\" placeholder=\"GitHub username\"> <input id=\"password\" type=\"text\" placeholder=\"Personal API token\"> <button onclick=\"{ opts.app.refresh(opts.app) }\">Apply</button>', function(opts) {\n\n});\n","riot.tag('events', '<div each=\"{ ev in opts.events }\"> { ev } </div> <div if=\"{ opts.error }\"> { opts.error } </div>', function(opts) {\n    this.on('update', function() {\n\n      var user = $('#username').val();\n      console.log('user ' + user);\n      if(typeof user == 'undefined'){ return; }\n      console.log('hey')\n      var url = 'https://api.github.com/users/' + user + '/events';\n      opts.app.get(url)\n      .done(function(json){ opts.events = json })\n      .fail(function(jqXHR,msg){ opts.error = msg })\n    })\n  \n});\n","riot.tag('main', '<h1> GitBeats <small>â€¢ your GitHub vitals</small> </h1> <auth></auth> <events></events>', function(opts) {\n    this.on('mount', function() {\n      opts.app.mount('auth');\n      opts.app.mount('events');\n    })\n  \n});\n"]}