{"version":3,"sources":["app/app.js","app/scripts/auth.jsx","app/scripts/events.jsx","app/scripts/main.jsx","app/scripts/repos.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAznDA;AAAA","file":"public/app.js","sourcesContent":["\"use strict\";\n\nvar App = {\n\n  init: function() {\n    require('scripts/main');\n    console.log('App initialized.');\n  },\n\n};\n\nmodule.exports = App;\n","var Auth = React.createClass({displayName: 'Auth',\n\n  apply: function(e) {\n    e.preventDefault();\n    this.props.main.refreshEvents({\n      username: this.refs.username.getDOMNode().value\n    });\n  },\n\n  render: function() {\n    return (\n      React.createElement(\"form\", {onSubmit: this.apply}, \n        React.createElement(\"input\", {ref: \"username\", type: \"text\", placeholder: \"GitHub username\"}), \n        React.createElement(\"input\", {ref: \"token\", id: \"token\", type: \"text\", placeholder: \"Personal API token\"}), \n        React.createElement(\"input\", {type: \"submit\", value: \"Apply\"})\n      )\n    );\n  }\n});\n\nmodule.exports = Auth;\n","var Events = React.createClass({displayName: 'Events',\n\n  getInitialState: function() { return {events: [], repos: new Map()}; },\n\n  refresh: function(data) {\n    this.setState(this.getInitialState());\n    for(var i = 1; i < 2; i++) this.getPage(data,i);\n  },\n\n  getPage: function(data,page){\n    var that = this;\n    this.props.main.get(\"/users/\" + data.username + \"/events?page=\" + page)\n      .then(function(json){\n        that.setState(function(prev){ return this.saveState(prev,json); });\n      });\n  },\n\n  saveState: function(prev,json){\n    // save repo event frequency\n    for(var evt of json){\n      var k = evt.repo.name, v = 1, p = prev.repos.get(k);\n      if(p) v = p + 1;\n      prev.repos.set(k, v);\n    }\n\n    this.props.main.fire('refreshRepos', { main: this.props.main,\n                                           repos: prev.repos });\n\n    return {events: prev.events.concat(json), repos: prev.repos};\n  },\n\n  render: function() {\n\n    var evts = 'No Data';\n    if(this.state.events.length > 0){\n      evts = this.state.events.map(function(evt,k){\n        return ( React.createElement(\"li\", {key: k}, evt.repo.name, \": \", evt.type) );\n      });\n    }\n\n    var repos = [];\n    if(this.state.repos.size > 0){\n      this.state.repos.forEach(function(v,k){\n        repos.push( React.createElement(\"li\", {key: k}, k, \": \", v) );\n      });\n    }\n\n    return (\n      React.createElement(\"div\", null, \n        React.createElement(\"ul\", null, repos), \n        React.createElement(\"ul\", {ref: \"events\"}, evts)\n      )\n    );\n  }\n});\n\nmodule.exports = Events;\n","var Auth = require('scripts/auth');\nvar Events = require('scripts/events');\nvar Repos = require('scripts/repos');\n\nvar Main = React.createClass({displayName: 'Main',\n\n  refreshEvents: function(data) {\n    this.refs.events.refresh(data);\n  },\n\n  fire: function(event, data) {\n    var event = new CustomEvent(event, { 'detail': data });\n    window.dispatchEvent(event);\n  },\n\n  // make the ajax call adding the host and the Auth header\n  // returns the promisable fetch object, with the parsed JSON as parameter\n  get: function(path) {\n    var token = document.querySelector('#token').value;\n\n    var h = new Headers();\n    h.append('Content-Type', 'application/json');\n    h.append('Authorization', \"Basic \" + btoa(token + \":x-oauth-basic\"));\n\n    return fetch('https://api.github.com' + path, { headers: h, mode: 'cors' })\n      .then(function(r){ return r.json(); })\n  },\n\n  render: function() {\n    return (\n      React.createElement(\"div\", null, \n        React.createElement(\"h1\", null, \" GitBeats \", React.createElement(\"small\", null, \" â€¢ your GitHub vitals\"), \" \"), \n        React.createElement(Auth, {main: this}), \n        React.createElement(Events, {ref: \"events\", main: this}), \n        React.createElement(Repos, {ref: \"repos\", main: this})\n      )\n    );\n  }\n});\n\nReact.render(\n  React.createElement(Main, null),\n  document.getElementById('main')\n);\n","var Repos = React.createClass({displayName: 'Repos',\n\n  getInitialState: function() { return {repos: new Map()}; },\n\n  componentDidMount: function() {\n    window.addEventListener('refreshRepos', this.handleRefresh);\n  },\n\n  componentWillUnmount: function() {\n    window.removeEventListener('refreshRepos', this.handleRefresh);\n  },\n\n  handleRefresh: function(e) {\n    var repos = e.detail.repos,\n        main = e.detail.main,\n        that = this;\n\n    if(!repos || repos.size == 0) return;\n\n    repos.forEach(function(v,k){\n      main.get(\"/repos/\" + k + \"/stats/contributors\")\n        .then(function(json){\n          that.setState(function(prev){ return this.saveContributors(prev,json); });\n        });\n    });\n  },\n\n  saveContributors: function(prev,json) {\n    // save contributors' data\n    console.dir(json);\n    return {contributors: []};\n  },\n\n  render: function() {\n\n    var repos = [];\n    if(this.state.repos.size > 0){\n      this.state.repos.forEach(function(v,k){\n        repos.push( React.createElement(\"li\", {key: k}, k, \": \", v) );\n      });\n    }\n\n    return (\n      React.createElement(\"div\", null, \n        React.createElement(\"ul\", {ref: \"repos\"}, repos)\n      )\n    );\n  }\n});\n\nmodule.exports = Repos;\n"]}