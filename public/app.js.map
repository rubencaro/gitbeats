{"version":3,"sources":["app/app.js","app/scripts/auth.jsx","app/scripts/events.jsx","app/scripts/main.jsx","app/scripts/repo.jsx","app/scripts/repos.jsx"],"names":[],"mappingsnBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAAA","file":"public/app.js","sourcesContent":["\"use strict\";\n\nvar App = {\n\n  init: function() {\n    require('scripts/main');\n    console.log('App initialized.');\n  },\n\n  // helper to fire given custom event and pass it the given data\n  fire: function(event, data) {\n    var event = new CustomEvent(event, { 'detail': data });\n    window.dispatchEvent(event);\n  },\n\n  // make the ajax call adding the host and the Auth header\n  // returns the promisable fetch object, with the parsed JSON as parameter\n  get: function(path) {\n    var token = document.querySelector('#token').value;\n\n    var h = new Headers();\n    h.append('Content-Type', 'application/json');\n    h.append('Authorization', \"Basic \" + btoa(token + \":x-oauth-basic\"));\n\n    return fetch('https://api.github.com' + path, { headers: h, mode: 'cors' })\n      .then(function(r){ return r.json(); })\n  },\n\n  // main entry point for the state calculation\n  startDataGathering: function(main) {\n    var data = {};\n    data.username = document.querySelector('#username').value;\n\n    // get every events page of the 10 max, and save the events\n    data.events = [];\n    for(var i = 1; i < 2; i++) this.getEventsPage(data, main, i);\n\n    // // calc event count by repo\n    // data.repoEvents = new Map();\n    // this.guessRepoEventFrequency(data);\n    //\n    // // gather contributors for each repo\n    // data.repoContributors = new Map();\n    // data.repoEvents.forEach(function(v, k){\n    //     that.gatherRepoContributors(data, k);\n    //   });\n\n  },\n\n  getEventsPage: function(data, main, page) {\n    this.get(\"/users/\" + data.username + \"/events?page=\" + page)\n      .then(function(json){\n          main.setState(function(prev){ return prev.events.concat(json); });\n        });\n  },\n\n  // calc repo event frequency\n  guessRepoEventFrequency: function(data) {\n    for(var evt in data.events){\n      var k = evt.repo.name, v = 1, p = data.repoEvents.get(k);\n      if(p) v = p + 1;\n      data.repoEvents.set(k, v);\n    }\n  },\n\n  gatherRepoContributors: function(data, repo) {\n    this.props.main.get(\"/repos/\" + repo + \"/stats/contributors\")\n      .then(function(json){\n        data.repoContributors.set(repo,json);\n        that.setState(function(prev){\n            return this.saveContributors(prev,json);\n        });\n      });\n  },\n\n};\n\nmodule.exports = App;\n","var Auth = React.createClass({displayName: 'Auth',\n\n  apply: function(e) {\n    e.preventDefault();\n    require('app').startDataGathering(this.props.main);\n  },\n\n  render: function() {\n    return (\n      React.createElement(\"form\", {onSubmit: this.apply}, \n        React.createElement(\"input\", {id: \"username\", type: \"text\", placeholder: \"GitHub username\"}), \n        React.createElement(\"input\", {id: \"token\", type: \"text\", placeholder: \"Personal API token\"}), \n        React.createElement(\"input\", {type: \"submit\", value: \"Apply\"})\n      )\n    );\n  }\n});\n\nmodule.exports = Auth;\n","var Events = React.createClass({displayName: 'Events',\n\n  render: function() {\n\n    if(!this.state) return(React.createElement(\"div\", null, \"No Data\"));\n\n    var evts = 'No Data';\n    if(this.state.events && this.state.events.length > 0){\n      evts = this.state.events.map(function(evt,k){\n        return ( React.createElement(\"li\", {key: k}, evt.repo.name, \": \", evt.type) );\n      });\n    }\n\n    var repos = [];\n    if(this.state.repos && this.state.repos.size > 0){\n      this.state.repos.forEach(function(v,k){\n        repos.push( React.createElement(\"li\", {key: k}, k, \": \", v) );\n      });\n    }\n\n    return (\n      React.createElement(\"div\", null, \n        React.createElement(\"ul\", null, repos), \n        React.createElement(\"ul\", {ref: \"events\"}, evts)\n      )\n    );\n  }\n});\n\nmodule.exports = Events;\n","var Auth = require('scripts/auth');\nvar Events = require('scripts/events');\nvar Repos = require('scripts/repos');\n\nvar Main = React.createClass({displayName: 'Main',\n\n  getInitialState: function() { return {events: []}; },\n\n  render: function() {\n    return (\n      React.createElement(\"div\", null, \n        React.createElement(\"h1\", null, \" GitBeats \", React.createElement(\"small\", null, \" â€¢ your GitHub vitals\"), \" \"), \n        React.createElement(Auth, {main: this}), \n        React.createElement(Events, {ref: \"events\", main: this}), \n        React.createElement(Repos, {ref: \"repos\", main: this})\n      )\n    );\n  }\n});\n\nReact.render(\n  React.createElement(Main, null),\n  document.getElementById('main')\n);\n","var Repo = React.createClass({displayName: 'Repo',\n  render: function() {\n\n    var repos = [];\n    if(this.state.repos.size > 0){\n      this.state.repos.forEach(function(v,k){\n        repos.push( React.createElement(\"li\", {key: k}, k, \": \", v) );\n      });\n    }\n\n    return (\n      React.createElement(\"div\", null, \n        React.createElement(\"ul\", {ref: \"repos\"}, repos)\n      )\n    );\n  }\n});\n\nmodule.exports = Repo;\n","var Repo = require('scripts/repo');\n\nvar Repos = React.createClass({displayName: 'Repos',\n\n  render: function() {\n\n    var repos = [];\n    if(this.state && this.state.repos && this.state.repos.size > 0){\n      this.state.repos.forEach(function(v,k){\n        repos.push( React.createElement(Repo, {key: k, name: k}) );\n      });\n    }\n\n    return (\n      React.createElement(\"div\", {ref: \"repos\"}, \n        repos\n      )\n    );\n  }\n});\n\nmodule.exports = Repos;\n"]}