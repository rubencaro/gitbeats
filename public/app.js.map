{"version":3,"sources":["app/app.js","app/scripts/auth.tag","app/scripts/events.tag"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA","file":"public/app.js","sourcesContent":["\"use strict\";\n\nvar App = {\n  init: function() {\n    require('scripts/auth');\n    riot.mount('auth');\n    require('scripts/events');\n    riot.mount('events', this);\n    console.log('App initialized.');\n  },\n\n  // returns the promisable jqXHR object\n  get: function(url) {\n    return $.ajax({\n      dataType: \"json\",\n      url: url,\n      crossDomain: true,\n      beforeSend: function(xhr) {\n        var token = $('#token').val();\n        xhr.setRequestHeader('Authorization', \"Basic \" + btoa(token + \":x-oauth-basic\"));\n      }\n    });\n  },\n\n  // calls riot.mount for the given tag, passing the JSON response\n  // from the given url\n  mount: function(tag,url){\n    get(url)\n    .done(function(json){ riot.mount(tag,json) })\n    .fail(function(jqXHR, textStatus){ console.log(textStatus) })\n    .always(function(){ console.log('done') })\n  }\n};\n\nmodule.exports = App;\n","riot.tag('auth', '<input id=\"username\" type=\"text\" placeholder=\"GitHub username\" value=\"rubencaro\"> <input id=\"token\" type=\"text\" placeholder=\"Personal API token\" value=\"\"> <button>Apply</button>', function(opts) {\n\n});\n","riot.tag('events', '<div> </div>', function(opts) {\n    this.on('mount', function() {\n\n      var user = $('#username').val();\n      var events = opts.get('https://api.github.com/users/' + user + '/events');\n      console.dir(events);\n    })\n  \n});\n"]}